# HW3
2017-2 소프트웨어공학 조별과제입니다.

# MainMenu
프로그램을 실행시키면 [ 1. Memo Manager  2. Calculator  3. Account Book  4. Quit ] 의 메뉴가 출력되며, 원하는 기능의 번호를 입력한다.

# MemoManager
메인 메뉴에서 사용자가 '1. Memo Manager'를 선택하면, 화면에는 새로운 메모장 창이 띄워지며 창의 이름은 "제목없음"이다. 메모장 창은 상단의 툴바와 가운데 부분의 입력란, 하단의 'SAVE', 'CLEAR' 버튼으로 이루어져 있다.

메모를 작성하여 저장하는 방법은 다음과 같다. 사용자는 입력란에 간단한 메모를 작성하고, 창의 하단에 위치한 'SAVE'버튼을 클릭한다. 'SAVE'버튼을 클릭하면 파일 탐색기 창이 띄워지며, 저장하고자 하는 메모의 이름을 입력한 후 저장 버튼을 클릭한다. 이때, 메모 프로그램은 텍스트 파일만을 대상으로 취급하여 확장자(.txt)를 미입력한 경우에는 올바르게 입력하라는 에러 메시지를 출력한다. 위와 같은 과정으로 저장이 완료되면, 작성하고 있던 중인 메모장 창으로 다시 돌아간다. 메모장 창의 입력란에는 작성을 완료한 내용이 출력되며, 메모장 창의 이름은 사용자가 저장할 때 입력한 이름으로 바뀐다. 만약 메모 작성 도중 입력한 내용 전체를 삭제하고 싶을 경우에는 'SAVE'옆에 위치한 'CLEAR'버튼을 클릭하면 된다. 단, 저장한 메모가 시스템에서 삭제되는 것이 아니라 입력란에 작성된 내용들이 화면상에서 깨끗이 사라지는 것이다.

사용자가 이전에 작성한 메모를 조회(혹은 열기) 하는 방법은 다음과 같다. 메모장 창 상단의 툴바에서 <파일>을 누른 후, <열기>를 누른다. 그러면 파일 탐색기 창이 띄워지며 수정하고자 하는 메모를 찾아 더블클릭하거나, 메모의 파일명을 입력한다. 단, 메모 프로그램은 텍스트 파일만을 대상으로 취급하므로 확장자(.txt)를 미입력한 경우에는 올바르게 입력하라는 에러 메시지가 출력된다. 존재하지 않는 파일명을 입력한 경우 또한 파일이 존재하지 않는다는 에러 메시지가 출력된다.  위와 같은 과정을 거치면, 새로운 메모장 창이 생성되고 해당 메모장 창의 입력란에 파일의 내용이 출력되어 나타나게 된다. 파일의 내용을 클릭하면 입력란에 커서가 위치하게 되고, 방향키나 마우스의 입력으로 커서의 위치를 조정하여 원하는 부분을 수정할 수 있다. 메모의 수정이 완료되면 하단의 'SAVE'버튼을 클릭하면 위에서 언급한 저장 과정과 동일하게 진행된다. 만약 수정한 메모를 다른 이름으로 저장하고 싶은 경우, 메모장 창의 상단 툴바의 <파일>을 클릭한 후, <다른이름으로 저장>을 클릭한다. 그러면 파일 탐색기 창이 띄워지며, 과정은 메모 작성(및 저장)과 동일하게 진행된다. 위와 같은 과정으로 수정된 메모의 저장이 완료되면 다시 메모장 창으로 돌아가게 된다. 만약 새롭게 수정되어 저장된 메모에서 벗어나 새로운 메모를 작성하고 싶다면 툴바의 <파일>을 클릭한 후 <새 메모>를 선택하면 메모장 창의 이름이 "제목없음"이라고 출력되며, 입력란이 비어있는 메모장 창으로 바뀌게 된다.

사용자가 메모를 삭제하는 방법은 다음과 같다. 메모장 창의 툴바의 <파일>을 클릭한 후, <삭제>를 클릭하면 파일 탐색기 창이 띄워지며, 삭제하고자 하는 메모를 찾아 더블클릭하거나, 메모의 파일명을 입력한다. 단, 메모 프로그램은 텍스트 파일만 대상으로 취급하므로 확장자(.txt)를 미입력한 경우에는 올바르게 입력하라는 에러 메시지가 출력된다. 또한 존재하지 않는 파일명을 입력한 경우 파일이 존재하지 않는다는 에러 메시지가 출력된다. 위와 같은 과정으로 삭제가 진행되면 "해당 메모를 삭제하시겠습니까?"라는 팝업창이 띄워지며, 이때 팝업창의 하단에 위치한 '예'를 클릭하면 메모가 삭제되고 처음의 메모장 화면으로 돌아가게 된다. 만약 '아니오'를 선택하면 메모는 삭제되지 않고 메모장 창으로 돌아가게 된다.

사용자가 메모장 프로그램을 종료하는 방법은 다음과 같다. 메모장 창 상단의 툴바에 위치한 <파일>을 클릭한 후, <종료>를 클릭한다. 그러면 메모장 관리 프로그램이 종료되며 전체 프로그램의 메인 메뉴로 돌아간다. 또는 메모장 창의 우측 상단에 위치한 'X'버튼을 클릭하면 메모장이 종료되는데, 이와 동시에 메인 프로그램도 종료된다.

/* 
MemoManagerTest.java 파일은 MemoManager class의 테스트 파일이다.
테스트는 저장과 삭제 기능이 잘 작동하는지 확인하도록 구현하였으며, 수정 기능은 파일을 여는 함수인 openPerformed() 함수에서 저장 함수인 savePerformed()를 호출하여 진행되기 때문에 저장 기능과 작동 과정이 동일하다고 판단하여 테스트 구현을 생략하였다.

testSavePerformed()에서는 저장 기능을 하는 savePerformed(String path, String contents) 함수를 테스트한다. 여기선 path 값을 전달할 때, 현재 작업 중인 디렉터리가 존재하는 위치에 디렉터리와 동일한 이름을 가진 텍스트 파일을 임의로 지정하였으며, contents 또한 임의로 지정하였다. savePerformed가 성공적으로 진행된 경우는 true를 리턴하므로 assertTrue(Memo.savePerformed(path, contents))를 사용하였으며, 내용이 온전하게 저장되었는지 확인하기 위해 파일 오픈 함수인 openPerformed를 호출하여 assertEquals(contents, Memo.openPerformed(path))를 하였다. 이때 openPerformed() 함수는 파일이 존재할 때에는 파일의 내용을 리턴하지만, 파일이 존재하지 않을 때에는 문자열 "Not Exist"을 리턴한다.

testDeletePerformed()에서는 삭제 기능을 하는 deletePerformed(Strig path) 함수를 테스트한다. 여기선 임의의 파일을 지우기 위해 앞서 Memo.savePerformed(String path, String contents) 함수를 이용하여 파일을 생성하였다. deletePerformed() 함수가 성공적으로 파일을 삭제하면 true를 리턴하므로 assertTrue(Memo.deletePerformed(path))를 사용하였으며, 해당 파일이 삭제되었는지 다시 한 번 확인하기 위해 openPerformed 함수를 호출하여 어떤 리턴 값을 가지는지 비교하였다. openPerformed 함수는 파일이 존재할 때에는 파일의 내용을 리턴하고, 파일이 존재하지 않을 때에는  문자열 "Not Exist"를 리턴한다. assertEquals("Not Exist", Memo.openPerformed(path)) 함수를 이용하여 둘의 값을 비교하도록 테스트를 구현하였다. 
*/



# Calculator
화면에 출력된 [1. 사칙 연산 2. 단위 변환 3. 종료] 메뉴 중 실행하고 싶은 기능의 번호를 입력한다.  모든 결과 값은 소수점 둘째 자리까지 표시된다.

‘사칙 연산’ 기능을 선택할 경우, 수행하고자 하는 사칙 연산(+,-,*,/)을 입력하며, 사칙연산 입력시 두 변수 사이에 하나의 연산자를 넣을 때 변수와 연산자 사이는 모두 띄워야 한다(ex. 3.24 * 9). 나누기 연산 시 분모의 자리에 ‘0’은 입력할 수 없다. ‘0’을 입력하면 오류를 나타내는 메시지가 화면에 출력되고, 결과 값이 0이 된다. 입력을 마치면 연산한 결과 값이 표시된다.

‘단위 변환’을 선택할 경우, [1. pound ↔ kg, 2. inch ↔ cm, 3. °F ↔ °C]의 메뉴가 나타난다. 수행하고자 하는 기능을 숫자로 입력한뒤, 다시 뜨는 입력창에서 단위 변환 방향을 숫자로 입력한다. (ex. 앞서 1번을 선택한 경우 1. pound -> kg or 2. kg-> pound가 화면에 출력됨). 변환 방향을 고르고 나면 변환하고자 하는 실수 값을 입력창에 입력한다. 입력을 마치면 변환된 결과 값이 표시된다.

‘종료’를 선택할 경우, 계산기 프로그램을 종료하고 가장 첫 메인 메뉴로 돌아가며, ‘종료’를 선택할 때까진 ‘Calculator’의 메뉴를 계속해서 수행한다.

TestCalculator.java 파일은 Calculator class의 테스트 파일이다. 
Calculator의 mul(사칙연산의 곱셈) 함수와 convertPoundToKg(pound에서 kg으로 단위변환) 함수에 실수값을 넣어, 곱셈 결과와 pound에서 kg으로 전환된 결과값을 반환하는지 테스트한다.




# AccountbookProgram
가계부를 이용할 사용자가 메인 메뉴에서 ‘Account book’ 을 선택하면, [1. 사용 기록, 2. 추가, 3. 수정, 4. 삭제, 5. 돌아가기]의 메뉴가 화면에 뜬다. 

‘사용 기록’ 버튼을 선택할 경우, 이제까지의 수입 혹은 지출 내역들의 <번호, 수입 혹은 지출 내역 구분, 내역, 날짜, 금액, 현재 남은 금액>이 화면에 출력된다. 아무 기록이 없는 경우, 현재 남은 금액은 0으로  나타난다.

‘추가’ 버튼을 선택할 경우, 사용자가 [1. 수입, 2. 지출] 중 고를 수 있도록 한다. ‘수입’을 선택한 경우 <수입 내용, 수입 날짜, 수입 금액>을 입력할 수 있다. ‘지출’을 선택할 경우 <지출 내용, 지출 날짜,  지출 금액>을 입력할 수 있다. 이 때, 각 기록에는 순차적으로 번호가 매겨지며, 사용자가 직접 입력하는 것이 아니라 자동적으로 부여된다. 내역 입력이 완료되면, ‘Account book’의 메뉴 선택 화면으로 돌아간다.

‘수정’ 버튼을 선택할 경우, 수정할 항목의 번호를 입력하면 그 항목의 <내역 구분(수입 혹은 지출), 내역, 날짜, 금액>을 다시 입력할 수 있다. 수정이 완료되면, ‘Account book’의 메뉴 선택 화면으로 돌아간다.

‘삭제’ 버튼을 선택할 경우, 삭제할 항목의 번호를 입력하면 삭제되었다는 안내 메세지와 함께 해당 항목이 삭제되고, ‘Account book’의 메뉴 선택 화면으로 돌아간다.

‘돌아가기’ 버튼을 선택할 경우, ‘Account book’ 기능을 종료하고 첫 메인 메뉴로 돌아가며, ‘돌아가기’를 선택하지 않는 한 ‘Account book’의 메뉴 선택 화면으로 간다.
